# 将采集到的数据保存到IoTDB
[[outputs.iotdb]]
  ## IoTDB 服务器配置
  ## host 是IoTDB服务器的ip地址
  ## port 是IoTDB服务器的端口号
  host = "127.0.0.1"
  port = "6667"

  ## 认证配置
  ## user是用户名，默认是'root', password是密码，默认是'root'
  user = "root"
  password = "root"

  ## 会话相关配置
  ## timeout是连接超时时间，单位是毫秒(ms)。该数值类型必须是int，0表示不设定超时。
  ## 负数会被当做0来看待。
  timeout = 5000

  ## 无符号整型的转换配置
  ## IoTDB 不支持无符号整数(版本 13.x).
  ## 对 uint32, 此插件会直接将其转换为 int64.
  ## 但是遇到 unit64 类型的数字时，该操作可能导致溢出，所以用户必须制定下面的一个可选的转换方案。
  ## 
  ## 本插件支持3种转换uint64的方式 : 
  ## - "ForceToInt64": 无论其数值多大，强制转换为 int64.
  ## - "ToInt64"(默认): 如果数字比 MAXINT64 小, 转换为 int64; 否则，转换为 MAXINT64。
  ##              math.MaxInt64 = 9223372036854775807
  ## - "Text": 无论数值多大，总是转换为字符串保存。在IoTDB中，字符串类型称为TEXT.
  convertUint64To = "ToInt64"

  ## 时间戳(timestamp)的相关配置
  ## 时间戳总是以int64的形式存储。timeStampUnit 指定了时间戳使用的单位. 如下是该变量的可用值:
  ## "second"(默认), "millisecond", "microsecond", "nanosecond"
  timeStampUnit = "second"
